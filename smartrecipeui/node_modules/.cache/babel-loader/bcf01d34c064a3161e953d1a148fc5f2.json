{"ast":null,"code":"import _slicedToArray from \"D:\\\\repo\\\\SmartRecipe\\\\smartrecipeui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\repo\\\\SmartRecipe\\\\smartrecipeui\\\\src\\\\App.js\";\nimport React, { useReducer, useEffect } from \"react\";\nimport Header from './components/Header';\nimport Recipe from './components/Recipe';\nimport Search from './components/Search';\nimport spinner from \"./assets/ajax-loader.gif\";\nimport './App.css';\nimport { initialState, reducer } from \"./redux/reduxer\";\nimport axios from \"axios\";\nconst RECIPE_API_URL = \"https://www.themealdb.com/api/json/v1/1/search.php?s=\"; // you should replace this with yours\n\nconst App = () => {\n  const _useReducer = useReducer(reducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  useEffect(() => {\n    axios.get(RECIPE_API_URL).then(jsonResponse => {\n      dispatch({\n        type: \"SEARCH_RECIPES_SUCCESS\",\n        payload: jsonResponse.data.Search\n      });\n    });\n  }, []); // you can add this to the onClick listener of the Header component\n\n  const refreshPage = () => {\n    window.location.reload();\n  };\n\n  const search = searchValue => {\n    dispatch({\n      type: \"SEARCH_RECIPES_REQUEST\"\n    });\n    axios(`https://www.themealdb.com/api/json/v1/1/search.php?s=${searchValue}`).then(jsonResponse => {\n      if (jsonResponse.data.Response === \"True\") {\n        dispatch({\n          type: \"SEARCH_RECIPES_SUCCESS\",\n          payload: jsonResponse.data.Search\n        });\n      } else {\n        dispatch({\n          type: \"SEARCH_RECIPES_FAILURE\",\n          error: jsonResponse.data.Error\n        });\n      }\n    });\n  };\n\n  const recipes = state.recipes,\n        errorMessage = state.errorMessage,\n        loading = state.loading;\n  console.log(recipes);\n  const retrievedRecipes = loading && !errorMessage ? React.createElement(\"img\", {\n    className: \"spinner\",\n    src: spinner,\n    alt: \"Loading spinner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }) : errorMessage ? React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, errorMessage) : recipes.map((recipe, index) => React.createElement(Recipe, {\n    key: `${index}-${recipe.strMeal}`,\n    recipe: recipe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"m-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Header, {\n    text: \"HOOKED\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Search, {\n    search: search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"App-intro\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Sharing a few of our favourite recipes\"), React.createElement(\"div\", {\n    className: \"recipes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, retrievedRecipes)));\n};\n\nexport default App;","map":{"version":3,"sources":["D:/repo/SmartRecipe/smartrecipeui/src/App.js"],"names":["React","useReducer","useEffect","Header","Recipe","Search","spinner","initialState","reducer","axios","RECIPE_API_URL","App","state","dispatch","get","then","jsonResponse","type","payload","data","refreshPage","window","location","reload","search","searchValue","Response","error","Error","recipes","errorMessage","loading","console","log","retrievedRecipes","map","recipe","index","strMeal"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport Header from './components/Header';\r\nimport Recipe from './components/Recipe';\r\nimport Search from  './components/Search';\r\nimport spinner from \"./assets/ajax-loader.gif\";\r\nimport './App.css';\r\nimport { initialState, reducer } from \"./redux/reduxer\";\r\nimport axios from \"axios\";\r\n\r\nconst RECIPE_API_URL = \"https://www.themealdb.com/api/json/v1/1/search.php?s=\"; // you should replace this with yours\r\n\r\nconst App = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  useEffect(() => {\r\n    axios.get(RECIPE_API_URL).then(jsonResponse => {\r\n      dispatch({\r\n        type: \"SEARCH_RECIPES_SUCCESS\",\r\n        payload: jsonResponse.data.Search\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  // you can add this to the onClick listener of the Header component\r\n  const refreshPage = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  const search = searchValue => {\r\n    dispatch({\r\n      type: \"SEARCH_RECIPES_REQUEST\"\r\n    });\r\n\r\n    axios(`https://www.themealdb.com/api/json/v1/1/search.php?s=${searchValue}`).then(\r\n      jsonResponse => {\r\n        if (jsonResponse.data.Response === \"True\") {\r\n          dispatch({\r\n            type: \"SEARCH_RECIPES_SUCCESS\",\r\n            payload: jsonResponse.data.Search\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: \"SEARCH_RECIPES_FAILURE\",\r\n            error: jsonResponse.data.Error\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const { recipes, errorMessage, loading } = state;\r\nconsole.log(recipes);\r\n  const retrievedRecipes =\r\n    loading && !errorMessage ? (\r\n      <img className=\"spinner\" src={spinner} alt=\"Loading spinner\" />\r\n    ) : errorMessage ? (\r\n      <div className=\"errorMessage\">{errorMessage}</div>\r\n    ) : (\r\n      recipes.map((recipe, index) => (\r\n        \r\n        <Recipe key={`${index}-${recipe.strMeal}`} recipe={recipe} />\r\n      ))\r\n    );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"m-container\">\r\n        <Header text=\"HOOKED\" />\r\n\r\n        <Search search={search} />\r\n\r\n        <p className=\"App-intro\">Sharing a few of our favourite recipes</p>\r\n\r\n        <div className=\"recipes\">{retrievedRecipes}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}