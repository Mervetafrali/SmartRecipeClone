{"ast":null,"code":"import _slicedToArray from \"D:\\\\repo\\\\SmartRecipe\\\\smartrecipeui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\repo\\\\SmartRecipe\\\\smartrecipeui\\\\src\\\\components\\\\SearchBar.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, connect } from 'react-redux';\n\nconst SearchBar = ({\n  recipes\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentValue = _useState2[0],\n        setCurrentValue = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currentSelect = _useState4[0],\n        setCurrentSelect = _useState4[1];\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    async function fetchData() {\n      dispatch({\n        type: 'recipes/request'\n      });\n\n      try {\n        const result = await fetch(`http://localhost:3000/recipe`);\n        console.log(result);\n        const res = await result.json();\n        dispatch({\n          type: 'recipe/success',\n          data: res.data\n        });\n        dispatch({\n          type: 'selectedRecipe/success',\n          data: res.data\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchData();\n  }, [dispatch]);\n\n  const _handleClick = async () => {\n    const selectedRecipes = recipes.filter(recipes => {\n      return recipes.category === currentSelect;\n    });\n    dispatch({\n      type: 'selectedRecipe/success',\n      data: selectedRecipes\n    });\n  };\n\n  const _handleChange = event => {\n    setCurrentValue(event.target.value);\n    change(currentValue);\n\n    _handleClick();\n  };\n\n  const change = currentValue => {\n    const array = [];\n\n    for (let i = 0; i < recipes.length; i++) {\n      array.push(recipes[i].country);\n    }\n\n    for (let j = 0; j < array.length; j++) {\n      const string = array[j];\n      const obj = string.includes(currentValue);\n\n      if (obj === true && currentValue !== \"\") {\n        setCurrentSelect(array[j]);\n      }\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: _handleChange,\n    className: \"form-control\",\n    placeholder: \"Arad\\u0131\\u011F\\u0131n\\u0131z Tarif Nedir?\",\n    \"aria-describedby\": \"button-addon2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.app.recipes\n  };\n};\n\nexport default connect(mapStateToProps)(SearchBar);","map":{"version":3,"sources":["D:/repo/SmartRecipe/smartrecipeui/src/components/SearchBar.js"],"names":["React","useState","useEffect","useDispatch","connect","SearchBar","recipes","currentValue","setCurrentValue","currentSelect","setCurrentSelect","dispatch","fetchData","type","result","fetch","console","log","res","json","data","error","_handleClick","selectedRecipes","filter","category","_handleChange","event","target","value","change","array","i","length","push","country","j","string","obj","includes","mapStateToProps","state","app"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, connect } from 'react-redux';\r\n\r\nconst SearchBar = ({ recipes }) => {\r\n    const [currentValue, setCurrentValue] = useState(\"\");\r\n\r\n    const [currentSelect, setCurrentSelect] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            dispatch({ type: 'recipes/request' });\r\n            try {\r\n                const result = await fetch(`http://localhost:3000/recipe`)\r\n                console.log(result);\r\n                const res = await result.json();\r\n\r\n                dispatch({ type: 'recipe/success', data: res.data });\r\n                dispatch({ type: 'selectedRecipe/success', data: res.data });\r\n                \r\n            }\r\n            catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [dispatch]);\r\n\r\n    const _handleClick = async () => {\r\n\r\n        const selectedRecipes = recipes.filter(recipes => {\r\n\r\n            return recipes.category === currentSelect;\r\n        });\r\n        \r\n\r\n        dispatch({ type: 'selectedRecipe/success', data: selectedRecipes });\r\n\r\n    };\r\n\r\n    const _handleChange = event => {\r\n\r\n        setCurrentValue(event.target.value);\r\n        change(currentValue);\r\n        _handleClick();\r\n    }\r\n\r\n    const change = (currentValue) => {\r\n        \r\n\r\n        const array = [];\r\n        for (let i = 0; i < recipes.length; i++) {\r\n            array.push(recipes[i].country);\r\n        }\r\n\r\n        for (let j = 0; j < array.length; j++) {\r\n            const string = array[j]\r\n            const obj = string.includes(currentValue);\r\n            if (obj === true && currentValue !== \"\") {\r\n                setCurrentSelect(array[j]);\r\n               \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"search\">\r\n                <div className=\"input-group mb-3\">\r\n                    <input onChange={_handleChange} className=\"form-control\" placeholder=\"Aradığınız Tarif Nedir?\" aria-describedby=\"button-addon2\" />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        recipes: state.app.recipes\r\n    };\r\n}\r\nexport default connect(mapStateToProps)(SearchBar);"]},"metadata":{},"sourceType":"module"}